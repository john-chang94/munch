[{"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\index.js":"1","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\App.js":"2","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\rootReducer.js":"3","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\SignIn.js":"4","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Navbar.js":"5","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Home.js":"6","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Register.js":"7","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\dashReducer.js":"8","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Restaurant.js":"9","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\starsHelper.js":"11","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\RestaurantCard.js":"12","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\config\\fb.js":"13","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\AddReview.js":"14","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\reviewReducer.js":"15","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Reviews.js":"16","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Footer.js":"17","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\actions\\index.js":"18","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Search.js":"19","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Preloader.js":"20","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\SignInModal.js":"21","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Filters.js":"22","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\RestaurantImages.js":"23","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Profile.js":"24","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\userReducer.js":"25","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\EditUserImageModal.js":"26","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\UserReviews.js":"27","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\EditReview.js":"28"},{"size":518,"mtime":1611181311808,"results":"29","hashOfConfig":"30"},{"size":1897,"mtime":1615508474232,"results":"31","hashOfConfig":"30"},{"size":603,"mtime":1613183506516,"results":"32","hashOfConfig":"30"},{"size":2230,"mtime":1611532910828,"results":"33","hashOfConfig":"30"},{"size":1531,"mtime":1612821404394,"results":"34","hashOfConfig":"30"},{"size":6281,"mtime":1612923968627,"results":"35","hashOfConfig":"30"},{"size":3281,"mtime":1612822707734,"results":"36","hashOfConfig":"30"},{"size":974,"mtime":1615341630372,"results":"37","hashOfConfig":"30"},{"size":4540,"mtime":1615165027873,"results":"38","hashOfConfig":"30"},{"size":965,"mtime":1613182977279,"results":"39","hashOfConfig":"30"},{"size":784,"mtime":1610931497046,"results":"40","hashOfConfig":"30"},{"size":587,"mtime":1613524664041,"results":"41","hashOfConfig":"30"},{"size":695,"mtime":1609726082267,"results":"42","hashOfConfig":"30"},{"size":9132,"mtime":1616361510085,"results":"43","hashOfConfig":"30"},{"size":1546,"mtime":1615518285934,"results":"44","hashOfConfig":"30"},{"size":2152,"mtime":1616361475043,"results":"45","hashOfConfig":"30"},{"size":264,"mtime":1611720385419,"results":"46","hashOfConfig":"30"},{"size":8762,"mtime":1615529922011,"results":"47","hashOfConfig":"30"},{"size":9506,"mtime":1615336818134,"results":"48","hashOfConfig":"30"},{"size":610,"mtime":1610496070819,"results":"49","hashOfConfig":"30"},{"size":2942,"mtime":1613178849419,"results":"50","hashOfConfig":"30"},{"size":2339,"mtime":1612824945896,"results":"51","hashOfConfig":"30"},{"size":1068,"mtime":1612821309924,"results":"52","hashOfConfig":"30"},{"size":10428,"mtime":1615495474086,"results":"53","hashOfConfig":"30"},{"size":711,"mtime":1611794872068,"results":"54","hashOfConfig":"30"},{"size":3309,"mtime":1613183997536,"results":"55","hashOfConfig":"30"},{"size":3674,"mtime":1616368751875,"results":"56","hashOfConfig":"30"},{"size":5040,"mtime":1616372855838,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"v1hx54",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\index.js",[],["119","120"],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\App.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\rootReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\SignIn.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Navbar.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Home.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Register.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\dashReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Restaurant.js",["121"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport M from 'materialize-css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { renderStars } from './starsHelper';\r\nimport AddReview from './AddReview';\r\nimport Reviews from './Reviews';\r\nimport Preloader from './Preloader';\r\n\r\nclass Restaurant extends Component {\r\n    state = {\r\n        stars: [],\r\n        isLoading: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const restaurant_id = this.props.match.params.restaurant_id;\r\n\r\n        await this.props.fetchRestaurant(restaurant_id);\r\n        await this.props.fetchImagesForRestaurant(restaurant_id);\r\n        await this.props.fetchReviewsForRestaurant(restaurant_id);\r\n\r\n        // Check if user posted a review for current restaurant\r\n        if (this.props.user && this.props.reviews) {\r\n            this.props.checkUserHasReview(this.props.reviews, this.props.user);\r\n        }\r\n\r\n        // Render rating with stars\r\n        let stars = renderStars(this.props.restaurant.rating);\r\n        this.setState({ stars, isLoading: false })\r\n\r\n        // Initialize media lightbox\r\n        M.Materialbox.init(document.querySelectorAll('.materialboxed'))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clear();\r\n    }\r\n\r\n    render() {\r\n        const { restaurant, images, reviews, user } = this.props;\r\n        const { stars, isLoading } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                {\r\n                    isLoading\r\n                        ? <div className=\"center mt-5\">\r\n                            <Preloader />\r\n                        </div>\r\n                        : <div>\r\n                            {   // Display restaurant info once fetched\r\n                                restaurant &&\r\n                                <div className=\"mb-1\">\r\n                                    <p className=\"heading\">{restaurant.name}</p>\r\n                                    <p className=\"cat-heading\">{restaurant.categories.map((category, i) =>\r\n                                        <span key={i}>{category}, </span>\r\n                                    )}</p>\r\n                                    <p>{stars} ({restaurant.total_ratings} reviews)</p>\r\n                                    <p>Price range: {'$'.repeat(parseInt(restaurant.price))}</p>\r\n                                </div>\r\n                            }\r\n\r\n                            {\r\n                                images\r\n                                    ? <div>\r\n                                        <div className=\"flex wrap-around justify-se\">\r\n                                            {\r\n                                                images && images.slice(0, 4).map((image, i) => (\r\n                                                    <div className=\"crop mt-1 mb-sm z-depth-2\" key={i}>\r\n                                                        <img className=\"materialboxed\" src={image.image_url} alt=\"\" />\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"center mt-2\">\r\n                                            <Link className=\"z-depth-1 black-text bg-x-light-gray bg-hover view-all\" to={`/restaurants/${this.props.match.params.restaurant_id}/photos`}>\r\n                                                View All Photos\r\n                                        </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    : <h5 className=\"center\">No images yet</h5>\r\n                            }\r\n\r\n                            <hr className=\"mt-4 mb-3\" />\r\n\r\n                            <AddReview reviews={reviews} />\r\n\r\n                            <hr className=\"mt-3 mb-3\" />\r\n\r\n                            <Reviews\r\n                                restaurant_id={this.props.match.params.restaurant_id}\r\n                            />\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ dash, review, auth }) => {\r\n    return {\r\n        restaurant: dash.restaurant,\r\n        images: review.images,\r\n        reviews: review.reviews,\r\n        user: auth.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Restaurant);","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\starsHelper.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\RestaurantCard.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\config\\fb.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\AddReview.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\reviewReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Reviews.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Footer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\actions\\index.js",["122","123","124","125"],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Search.js",["126","127","128"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport Preloader from './Preloader';\r\nimport Filters from './Filters';\r\n\r\nconst Search = (props) => {\r\n    const [search, setSearch] = useState('');\r\n    const [userSearch, setUserSearch] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [cursor, setCursor] = useState(-1); // No active sugg. while typing\r\n    const [price, setPrice] = useState('');\r\n    const [propsPrice, setPropsPrice] = useState();\r\n\r\n    const handleChange = e => {\r\n        const { value } = e.target;\r\n\r\n        if (value) {\r\n            // If user is typing, filter through suggestions with user input value\r\n            let suggestions = props.suggestions.filter(data => {\r\n                return data.param.toLowerCase().startsWith(value.toLowerCase());\r\n            })\r\n            setSearch(value);\r\n            setUserSearch(value); // Temp save user input for setSearchValue\r\n            setSuggestions(suggestions);\r\n        } else {\r\n            // If user is not typing, remove suggestions list\r\n            setSearch('');\r\n            setSuggestions([]);\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.key === 'ArrowUp' && cursor > -1) {\r\n            e.preventDefault(); // Prevent insertion point from moving to the beginning\r\n            setCursor(cursor - 1)\r\n\r\n        } else if (e.key === 'ArrowDown' && cursor < suggestions.length - 1) {\r\n            setCursor(cursor + 1)\r\n\r\n        } else if (e.key === 'Enter') {\r\n            e.preventDefault(); // Prevent duplicate push to history\r\n            let searchValue = document.getElementById('search');\r\n\r\n            props.history.push(`/search?find=${searchValue.value}`);\r\n\r\n            setSuggestions([]);\r\n        }\r\n    }\r\n\r\n    const setSearchValue = (isHovered, suggestion) => {\r\n        // Set value of suggestion in search box when isHovered is true\r\n        if (isHovered) setSearch(suggestion.param);\r\n        // Set original value in search box that the user was typing when isHovered is false\r\n        else setSearch(userSearch);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.history.push(`/search?find=${search}`);\r\n\r\n        // Remove suggestions list so onMouseLeave does not trigger after search\r\n        setSuggestions([]);\r\n    }\r\n\r\n    const handleClick = suggestion => {\r\n        props.history.push(`/search?find=${suggestion.param}`);\r\n\r\n        setSuggestions([]);\r\n    }\r\n\r\n    // On component mount\r\n    useEffect(() => {\r\n        const onMount = async () => {\r\n            // URLSearchParams is built-in the browser to work with queries\r\n            const searchQuery = new URLSearchParams(props.history.location.search);\r\n            \r\n            setSearch(searchQuery.get('find'));\r\n            setPrice(searchQuery.get('price'));\r\n            setPropsPrice(searchQuery.get('price'));\r\n\r\n            await props.fetchSuggestions();\r\n            await props.search(props.history.location.search);\r\n            setIsLoading(false);\r\n        }\r\n        onMount();\r\n\r\n        // Clear state on component unmount\r\n        return () => {\r\n            props.clear();\r\n            setPrice('')\r\n        }\r\n    }, [])\r\n\r\n    // On cursor pointer change from arrow keys\r\n    useEffect(() => {\r\n        let item = document.getElementById(cursor);\r\n        let searchValue = document.getElementById('search');\r\n\r\n        if (item) searchValue.value = item.textContent\r\n    }, [cursor])\r\n\r\n    // On url change, set search input value from query\r\n    useEffect(() => {\r\n        // Clear any error message before search results are fetched\r\n        if (props.dashError) props.clear();\r\n        const searchQuery = new URLSearchParams(props.history.location.search);\r\n        setSearch(searchQuery.get('find'));\r\n\r\n        // Separate state for price range as identifier and for props because\r\n        // executing setPrice here will cause the useEffect below to run\r\n        // which will cause this useEffect to run like an endless cycle.\r\n        // Also, an identifier for filters to determine which checkboxes are checked, if any.\r\n        setPropsPrice(searchQuery.get('price'))\r\n\r\n        props.search(props.history.location.search);\r\n\r\n    }, [props.history.location.search])\r\n\r\n    // On price state change, set price range input value from query\r\n    useEffect(() => {\r\n        // Clear any error message when user clicks on a different filter\r\n        if (props.dashError) props.clear();\r\n        const searchQuery = new URLSearchParams(props.history.location.search);\r\n\r\n        if (!price) {\r\n            \r\n            // Load all search results if user removes price filter\r\n            searchQuery.delete('price');\r\n            props.history.push(`/search?${searchQuery}`)\r\n        } else {\r\n            if (searchQuery.has('price')) {\r\n                \r\n                searchQuery.set('price', price);\r\n                props.history.push(`/search?${searchQuery}`)\r\n            } else {\r\n                \r\n                searchQuery.append('price', price);\r\n                props.history.push(`/search?${searchQuery}`)\r\n            }\r\n        }\r\n\r\n    }, [price])\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <Filters\r\n                price={price}\r\n                propsPrice={propsPrice}\r\n                setPrice={setPrice}\r\n            />\r\n            <div className=\"col l8 m8 s12\">\r\n                <form className=\"mt-3\" onSubmit={handleSubmit}>\r\n                    <div className=\"input-field\" id=\"search-area\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search for restaurants...\"\r\n                            id=\"search\"\r\n                            value={search}\r\n                            onChange={handleChange}\r\n                            autoComplete=\"off\"\r\n                            onKeyDown={handleKeyDown}\r\n                        />\r\n                        <ul>\r\n                            {\r\n                                // Render suggestions, if any\r\n                                suggestions &&\r\n                                suggestions.map((suggestion, i) => (\r\n                                    <li key={i}\r\n                                        id={i}\r\n                                        className={cursor === i ? 'sugg-active' : null}\r\n                                        onClick={handleClick.bind(this, suggestion)}\r\n                                        onMouseEnter={setSearchValue.bind(this, true, suggestion)}\r\n                                        onMouseLeave={setSearchValue.bind(this, false, suggestion)}\r\n                                    >{suggestion.param}</li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                        <button className=\"btn mt-sm\">Search</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div>\r\n                    <h4>Results</h4>\r\n                </div>\r\n\r\n                <div>\r\n                    {\r\n                        isLoading\r\n                            ? <div className=\"center\">\r\n                                <Preloader />\r\n                            </div>\r\n                            : <div>\r\n                                {\r\n                                    // Render error message if no restaurants found with price filter\r\n                                    props.dashError &&\r\n                                    <div className=\"center\">\r\n                                        <p>{props.dashError}</p>\r\n                                    </div>\r\n                                }\r\n\r\n                                {\r\n                                    // Only render when restaurants are found without error\r\n                                    (props.results && !props.dashError) &&\r\n                                    props.results.map((restaurant) => (\r\n                                        <div key={restaurant.restaurant_id}>\r\n                                            <Link to={`/restaurants/${restaurant.restaurant_id}`} className=\"black-text\">\r\n                                                <RestaurantCard\r\n                                                    name={restaurant.name}\r\n                                                    categories={restaurant.categories}\r\n                                                    rating={restaurant.rating}\r\n                                                    total_ratings={restaurant.total_ratings}\r\n                                                    price={restaurant.price}\r\n                                                />\r\n                                            </Link>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        results: state.dash.results,\r\n        suggestions: state.dash.suggestions,\r\n        dashError: state.dash.dashError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Search);","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Preloader.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\SignInModal.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Filters.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\RestaurantImages.js",["129"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport M from 'materialize-css';\r\n\r\nclass RestaurantImages extends Component {\r\n    async componentDidMount() {\r\n        await this.props.fetchImagesForRestaurant(this.props.match.params.restaurantId);\r\n        M.Materialbox.init(document.querySelectorAll('.materialboxed'))\r\n    }\r\n\r\n    render() {\r\n        const { images } = this.props;\r\n        return (\r\n            <div className=\"container flex wrap-around justify-se\">\r\n                {\r\n                    images && images.map((image, i) => (\r\n                        <div key={i} className=\"mt-2 all-img z-depth-2\">\r\n                            <img className=\"materialboxed\" src={image.url} />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        images: state.review.images\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(RestaurantImages);","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Profile.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\EditUserImageModal.js",["130"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport Modal from 'react-modal';\r\nimport { storage } from '../config/fb';\r\n\r\nclass EditUserImageModal extends Component {\r\n    state = {\r\n        file: ''\r\n    }\r\n\r\n    handleImageUpload = e => {\r\n        if (e.target.files[0]) {\r\n            const file = e.target.files[0];\r\n            const user_id = this.props.user.user_id;\r\n\r\n            const uploadTask = storage.ref(`/images/users/${file.name}`).put(file);\r\n            uploadTask.on('state_changed', console.log, console.error, () => {\r\n                storage\r\n                    .ref('images/users') // Images folder in firebase storage\r\n                    .child(file.name) // Child is the level inside images directory\r\n                    .getDownloadURL() // Fetch image URL from firebase\r\n                    .then(async (url) => {\r\n                        const imageBody = { user_id, image_url: url, def: false };\r\n                        // Add image url to db\r\n                        await this.props.addUserImage(imageBody);\r\n                        // Fetch updated image to display from props\r\n                        this.props.fetchUserImage(user_id);\r\n\r\n                        this.props.closeModal();\r\n                    });\r\n            });\r\n        }\r\n    }\r\n\r\n    handleImageDelete = async () => {\r\n        if (window.confirm('Are you sure you want to delete?')) {\r\n            await this.props.deleteUserImage(this.props.user.user_id);\r\n            await this.props.fetchUserImage(this.props.user.user_id);\r\n            this.props.closeModal();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { modalIsOpen, closeModal, userImage } = this.props;\r\n        const customStyles = {\r\n            content: {\r\n                top: '40%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                width: '450px'\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                style={customStyles}\r\n                onRequestClose={closeModal}\r\n                ariaHideApp={false}\r\n            >\r\n                <div className=\"center\">\r\n                    <div>\r\n                        <img src={userImage.image_url} style={{ maxHeight: '350px', maxWidth: '75%' }} alt=\"\" />\r\n                        {\r\n                            !userImage.user_id == 0 &&\r\n                            <p className=\"red-text darken-1 pointer\" onClick={this.handleImageDelete}>Delete profile picture</p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"mt-1\">\r\n                        <p className=\"mb-sm\"><strong>Upload image</strong></p>\r\n                        <input type=\"file\" onChange={this.handleImageUpload} />\r\n                    </div>\r\n                    <div className=\"mt-1\">\r\n                        <button className=\"btn-small blue-grey lighten-4 black-text\" onClick={closeModal}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(EditUserImageModal);","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\UserReviews.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\EditReview.js",["131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":43,"column":46,"nodeType":"138","messageId":"139","endLine":43,"endColumn":50},{"ruleId":"136","severity":1,"message":"140","line":86,"column":19,"nodeType":"138","messageId":"139","endLine":86,"endColumn":22},{"ruleId":"136","severity":1,"message":"140","line":96,"column":19,"nodeType":"138","messageId":"139","endLine":96,"endColumn":22},{"ruleId":"136","severity":1,"message":"140","line":106,"column":19,"nodeType":"138","messageId":"139","endLine":106,"endColumn":22},{"ruleId":"136","severity":1,"message":"140","line":127,"column":19,"nodeType":"138","messageId":"139","endLine":127,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":96,"column":8,"nodeType":"143","endLine":96,"endColumn":10,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"142","line":121,"column":8,"nodeType":"143","endLine":121,"endColumn":39,"suggestions":"145"},{"ruleId":"141","severity":1,"message":"142","line":146,"column":8,"nodeType":"143","endLine":146,"endColumn":15,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":19,"column":29,"nodeType":"149","endLine":19,"endColumn":78},{"ruleId":"150","severity":1,"message":"151","line":69,"column":48,"nodeType":"152","messageId":"153","endLine":69,"endColumn":50},{"ruleId":"136","severity":1,"message":"154","line":79,"column":33,"nodeType":"138","messageId":"139","endLine":79,"endColumn":42},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["157"],["158"],["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isHovered' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [props]",{"range":"166","text":"167"},"Update the dependencies array to be: [props, props.history.location.search]",{"range":"168","text":"169"},"Update the dependencies array to be: [price, props]",{"range":"170","text":"171"},[3450,3452],"[props]",[4481,4512],"[props, props.history.location.search]",[5402,5409],"[price, props]"]