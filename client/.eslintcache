[{"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\index.js":"1","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\App.js":"2","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\rootReducer.js":"3","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\SignIn.js":"4","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Navbar.js":"5","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Home.js":"6","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Register.js":"7","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\dashReducer.js":"8","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Restaurant.js":"9","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\authReducer.js":"10","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\starsHelper.js":"11","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\RestaurantCard.js":"12","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\config\\fb.js":"13","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\AddReview.js":"14","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\reviewReducer.js":"15","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Reviews.js":"16","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Footer.js":"17","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\actions\\index.js":"18","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Search.js":"19","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Preloader.js":"20","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\SignInModal.js":"21","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Filters.js":"22","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\RestaurantImages.js":"23","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Profile.js":"24","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\userReducer.js":"25","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\EditUserImageModal.js":"26","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\UserReviews.js":"27"},{"size":518,"mtime":1611181311808,"results":"28","hashOfConfig":"29"},{"size":1741,"mtime":1612589374502,"results":"30","hashOfConfig":"29"},{"size":388,"mtime":1611639847710,"results":"31","hashOfConfig":"29"},{"size":2230,"mtime":1611532910828,"results":"32","hashOfConfig":"29"},{"size":1529,"mtime":1612589370048,"results":"33","hashOfConfig":"29"},{"size":6301,"mtime":1612654512780,"results":"34","hashOfConfig":"29"},{"size":3266,"mtime":1612565084993,"results":"35","hashOfConfig":"29"},{"size":979,"mtime":1610672631124,"results":"36","hashOfConfig":"29"},{"size":4059,"mtime":1612654512780,"results":"37","hashOfConfig":"29"},{"size":1021,"mtime":1611639017169,"results":"38","hashOfConfig":"29"},{"size":784,"mtime":1610931497046,"results":"39","hashOfConfig":"29"},{"size":517,"mtime":1612654512780,"results":"40","hashOfConfig":"29"},{"size":695,"mtime":1609726082267,"results":"41","hashOfConfig":"29"},{"size":6556,"mtime":1612565294082,"results":"42","hashOfConfig":"29"},{"size":1029,"mtime":1612220712383,"results":"43","hashOfConfig":"29"},{"size":1500,"mtime":1612565106097,"results":"44","hashOfConfig":"29"},{"size":264,"mtime":1611720385419,"results":"45","hashOfConfig":"29"},{"size":7851,"mtime":1612565239465,"results":"46","hashOfConfig":"29"},{"size":9466,"mtime":1612654512780,"results":"47","hashOfConfig":"29"},{"size":610,"mtime":1610496070819,"results":"48","hashOfConfig":"29"},{"size":2734,"mtime":1610931428536,"results":"49","hashOfConfig":"29"},{"size":2339,"mtime":1612654512784,"results":"50","hashOfConfig":"29"},{"size":1067,"mtime":1612565106097,"results":"51","hashOfConfig":"29"},{"size":10426,"mtime":1612565216314,"results":"52","hashOfConfig":"29"},{"size":711,"mtime":1611794872068,"results":"53","hashOfConfig":"29"},{"size":3273,"mtime":1612565216314,"results":"54","hashOfConfig":"29"},{"size":2114,"mtime":1612565216314,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"v1hx54",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\index.js",[],["116","117"],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\App.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\rootReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\SignIn.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Navbar.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Home.js",["118","119","120","121","122"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport Preloader from './Preloader';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        search: '',\r\n        userSearch: '',\r\n        suggestions: [],\r\n        isLoading: true,\r\n        cursor: -1\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.fetchFeatured();\r\n        await this.props.fetchSuggestions();\r\n\r\n        this.setState({ isLoading: false })\r\n    }\r\n\r\n    // Update search input value of selected item from suggestions using arrow keys\r\n    componentDidUpdate() {\r\n        let item = document.getElementById(this.state.cursor);\r\n        let search = document.getElementById('search');\r\n\r\n        if (item) search.value = item.textContent;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { id, value } = e.target;\r\n\r\n        if (value) {\r\n            // If user is typing, filter through suggestions with user input value\r\n            let suggestions = this.props.suggestions.filter(data => {\r\n                return data.param.toLowerCase().startsWith(value.toLowerCase());\r\n            })\r\n            this.setState({\r\n                [id]: value,\r\n                userSearch: value, // Temp save user input for setSearchValue\r\n                suggestions\r\n            })\r\n        } else {\r\n            // If user is not typing, remove suggestions list\r\n            this.setState({\r\n                search: '',\r\n                suggestions: [],\r\n                cursor: -1\r\n            })\r\n        }\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        const { cursor, suggestions } = this.state;\r\n        if (e.key === 'ArrowUp' && cursor > -1) {\r\n            e.preventDefault(); // Prevent insertion point from moving to the beginning\r\n            this.setState({ cursor: cursor - 1 })\r\n\r\n        } else if (e.key === 'ArrowDown' && cursor < suggestions.length - 1) {\r\n            this.setState({ cursor: cursor + 1 })\r\n\r\n        } else if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            let searchValue = document.getElementById('search');\r\n\r\n            this.props.history.push(`/search?find=${searchValue.value}`);\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { search } = this.state;\r\n\r\n        this.props.history.push(`/search?find=${search}`);\r\n    }\r\n\r\n    setSearchValue = (isHovered, suggestion, index) => {\r\n        const { userSearch } = this.state;\r\n\r\n        // Set value of suggestion in search box when isHovered is true\r\n        if (isHovered) this.setState({\r\n            search: suggestion.param,\r\n            cursor: index\r\n        })\r\n        // Set original value in search box that the user was typing when isHovered is false\r\n        else this.setState({\r\n            search: userSearch,\r\n            cursor: -1\r\n        })\r\n    }\r\n\r\n    handleClick = suggestion => {\r\n        this.props.history.push(`/search?find=${suggestion.param}`);\r\n    }\r\n\r\n    render() {\r\n        const { search, suggestions, isLoading, cursor } = this.state;\r\n        const { featured } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"mt-5\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\" id=\"search-area\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search for restaurants...\"\r\n                            id=\"search\"\r\n                            value={search}\r\n                            onChange={this.handleChange}\r\n                            autoComplete=\"off\"\r\n                            onKeyDown={this.handleKeyDown}\r\n                        />\r\n                        <ul>\r\n                            {\r\n                                // Render suggestions, if any\r\n                                suggestions &&\r\n                                suggestions.map((suggestion, i) => (\r\n                                    <li key={i}\r\n                                        id={i}\r\n                                        className={cursor === i ? 'sugg-active' : null}\r\n                                        onClick={this.handleClick.bind(this, suggestion)}\r\n                                        onMouseEnter={this.setSearchValue.bind(this, true, suggestion, i)}\r\n                                        onMouseLeave={this.setSearchValue.bind(this, false, suggestion, i)}\r\n                                    >{suggestion.param}</li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                        <button className=\"btn mt-sm\">Search</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div>\r\n                    <h4>Featured</h4>\r\n                </div>\r\n\r\n                {/* <div>\r\n                    {\r\n                        isLoading\r\n                            ? <div className=\"center\">\r\n                                <Preloader />\r\n                            </div>\r\n                            : featured.map((restaurant) => (\r\n                                <div key={restaurant.restaurantId}>\r\n                                    <Link to={`/restaurants/${restaurant.restaurantId}`} className=\"black-text\">\r\n                                        <RestaurantCard\r\n                                            name={restaurant.name}\r\n                                            category={restaurant.category}\r\n                                            rating={restaurant.rating}\r\n                                            totalRatings={restaurant.totalRatings}\r\n                                            price={restaurant.price}\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                            ))\r\n                    }\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        featured: state.dash.featured,\r\n        suggestions: state.dash.suggestions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Home);","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Register.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\dashReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Restaurant.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\starsHelper.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\RestaurantCard.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\config\\fb.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\AddReview.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\reviewReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Reviews.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Footer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\actions\\index.js",["123","124","125","126"],"import axios from 'axios';\r\n\r\nconst token = sessionStorage.getItem('token');\r\nif (token) {\r\n    // Set global headers for axios, need to set in other parents components\r\n    const tokenConfig = { 'token': token }\r\n    axios.defaults.headers = tokenConfig\r\n}\r\n\r\nexport const clear = () => {\r\n    return dispatch => {\r\n        dispatch({ type: 'CLEAR_ERROR' })\r\n    }\r\n}\r\n\r\n/////////////////////////////\r\n/////// AUTH ACTIONS ////////\r\n/////////////////////////////\r\n\r\nexport const verifyUser = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/verify`)\r\n            dispatch({ type: 'VERIFY_USER', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'AUTH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const register = body => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/register`, body);\r\n            dispatch({ type: 'REGISTER', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'AUTH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const signIn = body => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/signin`, body);\r\n            sessionStorage.setItem('token', res.data.token);\r\n            \r\n            dispatch({ type: 'SIGN_IN', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'AUTH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            sessionStorage.removeItem('token');\r\n            dispatch({ type: 'SIGN_OUT' })\r\n        } catch (err) {\r\n            dispatch({ type: 'AUTH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////\r\n/////// USER ACTIONS ////////\r\n/////////////////////////////\r\n\r\nexport const fetchUser = userId => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/users/${userId}`)\r\n            dispatch({ type: 'FETCH_USER', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'USER_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (userId, body) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/users/${userId}`, body)\r\n        } catch (err) {\r\n            dispatch({ type: 'USER_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUserPassword = (userId, body) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/users/reset-pw/${userId}`, body);\r\n        } catch (err) {\r\n            dispatch({ type: 'USER_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n} \r\n\r\nexport const addUserImage = body => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/users/userImages`, body)\r\n        } catch (err) {\r\n            dispatch({ type: 'USER_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchUserImage = userId => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/users/userImages/${userId}`)\r\n            dispatch({ type: 'FETCH_USER_IMAGE', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'USER_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserImage = userId => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/users/userImages/${userId}`)\r\n        } catch (err) {\r\n            dispatch({ type: 'USER_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////\r\n/////// DASH ACTIONS ////////\r\n/////////////////////////////\r\n\r\nexport const fetchFeatured = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/restaurants`);\r\n            dispatch({ type: 'FETCH_FEATURED', payload: res.data.data.slice(0, 5) })\r\n        } catch (err) {\r\n            dispatch({ type: 'DASH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchRestaurant = restaurantId => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/restaurants/${restaurantId}`)\r\n            dispatch({ type: 'FETCH_RESTAURANT', payload: res.data.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'DASH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchImagesForRestaurant = restaurantId => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/reviewImages/restaurants/${restaurantId}`);\r\n            dispatch({ type: 'FETCH_IMAGES_FOR_RESTAURANT', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'DASH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const search = queries => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/restaurants${queries}`);\r\n            dispatch({ type: 'SEARCH', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'DASH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchSuggestions = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/suggestions`);\r\n            dispatch({ type: 'FETCH_SUGGESTIONS', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'DASH_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////\r\n////// REVIEWS ACTIONS //////\r\n/////////////////////////////\r\n\r\nexport const addReview = body => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/reviews`, body);\r\n            dispatch({ type: 'ADD_REVIEW', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'REVIEW_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addReviewImage = body => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/reviewImages`, body);\r\n            dispatch({ type: 'ADD_REVIEW_IMAGE', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'REVIEW_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchReviewsForRestaurant = restaurantId => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/reviews/restaurants/${restaurantId}`);\r\n            dispatch({ type: 'FETCH_REVIEWS_FOR_RESTAURANT', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'REVIEW_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchReviewsByUser = userId => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/reviews/users/${userId}`)\r\n            dispatch({ type: 'FETCH_REVIEWS_BY_USER', payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: 'REVIEW_ERROR', payload: err.response.data })\r\n        }\r\n    }\r\n}","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Search.js",["127","128","129"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport Preloader from './Preloader';\r\nimport Filters from './Filters';\r\n\r\nconst Search = (props) => {\r\n    const [search, setSearch] = useState('');\r\n    const [userSearch, setUserSearch] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [cursor, setCursor] = useState(-1);\r\n    const [priceRange, setPriceRange] = useState('');\r\n    const [propsPriceRange, setPropsPriceRange] = useState();\r\n\r\n    const handleChange = e => {\r\n        const { value } = e.target;\r\n\r\n        if (value) {\r\n            // If user is typing, filter through suggestions with user input value\r\n            let suggestions = props.suggestions.filter(data => {\r\n                return data.param.toLowerCase().startsWith(value.toLowerCase());\r\n            })\r\n            setSearch(value);\r\n            setUserSearch(value); // Temp save user input for setSearchValue\r\n            setSuggestions(suggestions);\r\n        } else {\r\n            // If user is not typing, remove suggestions list\r\n            setSearch('');\r\n            setSuggestions([]);\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.key === 'ArrowUp' && cursor > -1) {\r\n            e.preventDefault(); // Prevent insertion point from moving to the beginning\r\n            setCursor(cursor - 1)\r\n\r\n        } else if (e.key === 'ArrowDown' && cursor < suggestions.length - 1) {\r\n            setCursor(cursor + 1)\r\n\r\n        } else if (e.key === 'Enter') {\r\n            e.preventDefault(); // Prevent duplicate push to history\r\n            let searchValue = document.getElementById('search');\r\n\r\n            props.history.push(`/search?find=${searchValue.value}`);\r\n\r\n            setSuggestions([]);\r\n        }\r\n    }\r\n\r\n    const setSearchValue = (isHovered, suggestion) => {\r\n        // Set value of suggestion in search box when isHovered is true\r\n        if (isHovered) setSearch(suggestion.param);\r\n        // Set original value in search box that the user was typing when isHovered is false\r\n        else setSearch(userSearch);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.history.push(`/search?find=${search}`);\r\n\r\n        // Remove suggestions list so onMouseLeave does not trigger after search\r\n        setSuggestions([]);\r\n    }\r\n\r\n    const handleClick = suggestion => {\r\n        props.history.push(`/search?find=${suggestion.param}`);\r\n\r\n        setSuggestions([]);\r\n    }\r\n\r\n    // On component mount\r\n    useEffect(() => {\r\n        const onMount = async () => {\r\n            // URLSearchParams is built-in the browser to work with queries\r\n            const searchQuery = new URLSearchParams(props.history.location.search);\r\n            \r\n            setSearch(searchQuery.get('find'));\r\n            setPriceRange(searchQuery.get('priceRange'));\r\n            setPropsPriceRange(searchQuery.get('priceRange'));\r\n\r\n            await props.fetchSuggestions();\r\n            await props.search(props.history.location.search);\r\n            setIsLoading(false);\r\n        }\r\n        onMount();\r\n\r\n        // Clear state on component unmount\r\n        return () => {\r\n            props.clear();\r\n            setPriceRange('')\r\n        }\r\n    }, [])\r\n\r\n    // On cursor pointer change from arrow keys\r\n    useEffect(() => {\r\n        let item = document.getElementById(cursor);\r\n        let searchValue = document.getElementById('search');\r\n\r\n        if (item) searchValue.value = item.textContent\r\n    }, [cursor])\r\n\r\n    // On url change, set search input value from query\r\n    useEffect(() => {\r\n        // Clear any error message before search results are fetched\r\n        if (props.dashError) props.clear();\r\n        const searchQuery = new URLSearchParams(props.history.location.search);\r\n        setSearch(searchQuery.get('find'));\r\n\r\n        // Separate state for price range as identifier and for props because\r\n        // executing setPriceRange here will cause the useEffect below to run\r\n        // which will cause this useEffect to run like an endless cycle.\r\n        // Also, an identifier for filters to determine which checkboxes are checked, if any.\r\n        setPropsPriceRange(searchQuery.get('priceRange'))\r\n\r\n        props.search(props.history.location.search);\r\n\r\n    }, [props.history.location.search])\r\n\r\n    // On priceRange state change, set price range input value from query\r\n    useEffect(() => {\r\n        // Clear any error message when user clicks on a different filter\r\n        if (props.dashError) props.clear();\r\n        const searchQuery = new URLSearchParams(props.history.location.search);\r\n\r\n        if (!priceRange) {\r\n            \r\n            // Load all search results if user removes price filter\r\n            searchQuery.delete('priceRange');\r\n            props.history.push(`/search?${searchQuery}`)\r\n        } else {\r\n            if (searchQuery.has('priceRange')) {\r\n                \r\n                searchQuery.set('priceRange', priceRange);\r\n                props.history.push(`/search?${searchQuery}`)\r\n            } else {\r\n                \r\n                searchQuery.append('priceRange', priceRange);\r\n                props.history.push(`/search?${searchQuery}`)\r\n            }\r\n        }\r\n\r\n    }, [priceRange])\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <Filters\r\n                priceRange={priceRange}\r\n                propsPriceRange={propsPriceRange}\r\n                setPriceRange={setPriceRange}\r\n            />\r\n            <div className=\"col l8 m8 s12\">\r\n                <form className=\"mt-3\" onSubmit={handleSubmit}>\r\n                    <div className=\"input-field\" id=\"search-area\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search for restaurants...\"\r\n                            id=\"search\"\r\n                            value={search}\r\n                            onChange={handleChange}\r\n                            autoComplete=\"off\"\r\n                            onKeyDown={handleKeyDown}\r\n                        />\r\n                        <ul>\r\n                            {\r\n                                // Render suggestions, if any\r\n                                suggestions &&\r\n                                suggestions.map((suggestion, i) => (\r\n                                    <li key={i}\r\n                                        id={i}\r\n                                        className={cursor === i ? 'sugg-active' : null}\r\n                                        onClick={handleClick.bind(this, suggestion)}\r\n                                        onMouseEnter={setSearchValue.bind(this, true, suggestion)}\r\n                                        onMouseLeave={setSearchValue.bind(this, false, suggestion)}\r\n                                    >{suggestion.param}</li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                        <button className=\"btn mt-sm\">Search</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div>\r\n                    <h4>Results</h4>\r\n                </div>\r\n\r\n                <div>\r\n                    {\r\n                        isLoading\r\n                            ? <div className=\"center\">\r\n                                <Preloader />\r\n                            </div>\r\n                            : <div>\r\n                                {\r\n                                    // Render error message if no restaurants found with price filter\r\n                                    props.dashError &&\r\n                                    <div className=\"center\">\r\n                                        <p>{props.dashError}</p>\r\n                                    </div>\r\n                                }\r\n\r\n                                {\r\n                                    // Only render when restaurants are found without error\r\n                                    (props.results && !props.dashError) &&\r\n                                    props.results.map((restaurant) => (\r\n                                        <div key={restaurant.restaurantId}>\r\n                                            <Link to={`/restaurants/${restaurant.restaurantId}`} className=\"black-text\">\r\n                                                <RestaurantCard\r\n                                                    name={restaurant.name}\r\n                                                    category={restaurant.category}\r\n                                                    rating={restaurant.rating}\r\n                                                    totalRatings={restaurant.totalRatings}\r\n                                                    priceRange={restaurant.priceRange}\r\n                                                />\r\n                                            </Link>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        results: state.dash.results,\r\n        suggestions: state.dash.suggestions,\r\n        dashError: state.dash.dashError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Search);","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Preloader.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\SignInModal.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Filters.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\RestaurantImages.js",["130"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport M from 'materialize-css';\r\n\r\nclass RestaurantImages extends Component {\r\n    async componentDidMount() {\r\n        await this.props.fetchImagesForRestaurant(this.props.match.params.restaurantId);\r\n        M.Materialbox.init(document.querySelectorAll('.materialboxed'))\r\n    }\r\n\r\n    render() {\r\n        const { images } = this.props;\r\n        return (\r\n            <div className=\"container flex wrap-around justify-se\">\r\n                {\r\n                    images && images.map((image, i) => (\r\n                        <div key={i} className=\"mt-2 all-img z-depth-2\">\r\n                            <img className=\"materialboxed\" src={image.url} />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        images: state.review.images\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(RestaurantImages);","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\Profile.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\EditUserImageModal.js",["131"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport Modal from 'react-modal';\r\nimport { storage } from '../config/fb';\r\n\r\nclass EditUserImageModal extends Component {\r\n    state = {\r\n        file: ''\r\n    }\r\n\r\n    handleImageUpload = e => {\r\n        if (e.target.files[0]) {\r\n            const file = e.target.files[0];\r\n            const userId = this.props.user.userId;\r\n\r\n            const uploadTask = storage.ref(`/images/users/${file.name}`).put(file);\r\n            uploadTask.on('state_changed', console.log, console.error, () => {\r\n                storage\r\n                    .ref('images/users') // Images folder in firebase storage\r\n                    .child(file.name) // Child is the level inside images directory\r\n                    .getDownloadURL() // Fetch image URL from firebase\r\n                    .then(async (url) => {\r\n                        const imageBody = { userId, url };\r\n                        // Add image url to db\r\n                        await this.props.addUserImage(imageBody);\r\n                        // Fetch updated image to display from props\r\n                        this.props.fetchUserImage(userId);\r\n\r\n                        this.props.closeModal();\r\n                    });\r\n            });\r\n        }\r\n    }\r\n\r\n    handleImageDelete = async () => {\r\n        if (window.confirm('Are you sure you want to delete?')) {\r\n            await this.props.deleteUserImage(this.props.user.userId);\r\n            await this.props.fetchUserImage(this.props.user.userId);\r\n            this.props.closeModal();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { modalIsOpen, closeModal, userImage } = this.props;\r\n        const customStyles = {\r\n            content: {\r\n                top: '40%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                width: '450px'\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                style={customStyles}\r\n                onRequestClose={closeModal}\r\n                ariaHideApp={false}\r\n            >\r\n                <div className=\"center\">\r\n                    <div>\r\n                        <img src={userImage.url} style={{ maxHeight: '350px', maxWidth: '75%' }} alt=\"\" />\r\n                        {\r\n                            !userImage.userId == 0 &&\r\n                            <p className=\"red-text darken-1 pointer\" onClick={this.handleImageDelete}>Delete profile picture</p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"mt-1\">\r\n                        <p className=\"mb-sm\"><strong>Upload image</strong></p>\r\n                        <input type=\"file\" onChange={this.handleImageUpload} />\r\n                    </div>\r\n                    <div className=\"mt-1\">\r\n                        <button className=\"btn-small blue-grey lighten-4 black-text\" onClick={closeModal}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(EditUserImageModal);","C:\\Users\\chang\\Desktop\\Back to Square One\\munch\\client\\src\\components\\UserReviews.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"140","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":22},{"ruleId":"136","severity":1,"message":"141","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":17},{"ruleId":"136","severity":1,"message":"142","line":99,"column":38,"nodeType":"138","messageId":"139","endLine":99,"endColumn":47},{"ruleId":"136","severity":1,"message":"143","line":100,"column":17,"nodeType":"138","messageId":"139","endLine":100,"endColumn":25},{"ruleId":"136","severity":1,"message":"144","line":84,"column":19,"nodeType":"138","messageId":"139","endLine":84,"endColumn":22},{"ruleId":"136","severity":1,"message":"144","line":94,"column":19,"nodeType":"138","messageId":"139","endLine":94,"endColumn":22},{"ruleId":"136","severity":1,"message":"144","line":104,"column":19,"nodeType":"138","messageId":"139","endLine":104,"endColumn":22},{"ruleId":"136","severity":1,"message":"144","line":125,"column":19,"nodeType":"138","messageId":"139","endLine":125,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":96,"column":8,"nodeType":"147","endLine":96,"endColumn":10,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"146","line":121,"column":8,"nodeType":"147","endLine":121,"endColumn":39,"suggestions":"149"},{"ruleId":"145","severity":1,"message":"146","line":146,"column":8,"nodeType":"147","endLine":146,"endColumn":20,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":19,"column":29,"nodeType":"153","endLine":19,"endColumn":78},{"ruleId":"154","severity":1,"message":"155","line":69,"column":47,"nodeType":"156","messageId":"157","endLine":69,"endColumn":49},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'RestaurantCard' is defined but never used.","'Preloader' is defined but never used.","'isLoading' is assigned a value but never used.","'featured' is assigned a value but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["160"],["161"],["162"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [props]",{"range":"169","text":"170"},"Update the dependencies array to be: [props, props.history.location.search]",{"range":"171","text":"172"},"Update the dependencies array to be: [priceRange, props]",{"range":"173","text":"174"},[3463,3465],"[props]",[4509,4540],"[props, props.history.location.search]",[5470,5482],"[priceRange, props]"]